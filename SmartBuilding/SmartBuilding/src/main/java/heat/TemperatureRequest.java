// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: heat.proto

package heat;

/**
 * Protobuf type {@code heat.TemperatureRequest}
 */
public  final class TemperatureRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:heat.TemperatureRequest)
    TemperatureRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TemperatureRequest.newBuilder() to construct.
  private TemperatureRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TemperatureRequest() {
    numbers_ = 0;
    start_ = 0;
    increment_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TemperatureRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            numbers_ = input.readInt32();
            break;
          }
          case 16: {

            start_ = input.readInt32();
            break;
          }
          case 24: {

            increment_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return heat.HeatServiceImpl.internal_static_heat_TemperatureRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return heat.HeatServiceImpl.internal_static_heat_TemperatureRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            heat.TemperatureRequest.class, heat.TemperatureRequest.Builder.class);
  }

  public static final int NUMBERS_FIELD_NUMBER = 1;
  private int numbers_;
  /**
   * <code>int32 numbers = 1;</code>
   */
  public int getNumbers() {
    return numbers_;
  }

  public static final int START_FIELD_NUMBER = 2;
  private int start_;
  /**
   * <code>int32 start = 2;</code>
   */
  public int getStart() {
    return start_;
  }

  public static final int INCREMENT_FIELD_NUMBER = 3;
  private int increment_;
  /**
   * <code>int32 increment = 3;</code>
   */
  public int getIncrement() {
    return increment_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (numbers_ != 0) {
      output.writeInt32(1, numbers_);
    }
    if (start_ != 0) {
      output.writeInt32(2, start_);
    }
    if (increment_ != 0) {
      output.writeInt32(3, increment_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (numbers_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, numbers_);
    }
    if (start_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, start_);
    }
    if (increment_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, increment_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof heat.TemperatureRequest)) {
      return super.equals(obj);
    }
    heat.TemperatureRequest other = (heat.TemperatureRequest) obj;

    boolean result = true;
    result = result && (getNumbers()
        == other.getNumbers());
    result = result && (getStart()
        == other.getStart());
    result = result && (getIncrement()
        == other.getIncrement());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NUMBERS_FIELD_NUMBER;
    hash = (53 * hash) + getNumbers();
    hash = (37 * hash) + START_FIELD_NUMBER;
    hash = (53 * hash) + getStart();
    hash = (37 * hash) + INCREMENT_FIELD_NUMBER;
    hash = (53 * hash) + getIncrement();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static heat.TemperatureRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static heat.TemperatureRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static heat.TemperatureRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static heat.TemperatureRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static heat.TemperatureRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static heat.TemperatureRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static heat.TemperatureRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static heat.TemperatureRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static heat.TemperatureRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static heat.TemperatureRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static heat.TemperatureRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static heat.TemperatureRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(heat.TemperatureRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code heat.TemperatureRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:heat.TemperatureRequest)
      heat.TemperatureRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return heat.HeatServiceImpl.internal_static_heat_TemperatureRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return heat.HeatServiceImpl.internal_static_heat_TemperatureRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              heat.TemperatureRequest.class, heat.TemperatureRequest.Builder.class);
    }

    // Construct using heat.TemperatureRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      numbers_ = 0;

      start_ = 0;

      increment_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return heat.HeatServiceImpl.internal_static_heat_TemperatureRequest_descriptor;
    }

    @java.lang.Override
    public heat.TemperatureRequest getDefaultInstanceForType() {
      return heat.TemperatureRequest.getDefaultInstance();
    }

    @java.lang.Override
    public heat.TemperatureRequest build() {
      heat.TemperatureRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public heat.TemperatureRequest buildPartial() {
      heat.TemperatureRequest result = new heat.TemperatureRequest(this);
      result.numbers_ = numbers_;
      result.start_ = start_;
      result.increment_ = increment_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof heat.TemperatureRequest) {
        return mergeFrom((heat.TemperatureRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(heat.TemperatureRequest other) {
      if (other == heat.TemperatureRequest.getDefaultInstance()) return this;
      if (other.getNumbers() != 0) {
        setNumbers(other.getNumbers());
      }
      if (other.getStart() != 0) {
        setStart(other.getStart());
      }
      if (other.getIncrement() != 0) {
        setIncrement(other.getIncrement());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      heat.TemperatureRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (heat.TemperatureRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int numbers_ ;
    /**
     * <code>int32 numbers = 1;</code>
     */
    public int getNumbers() {
      return numbers_;
    }
    /**
     * <code>int32 numbers = 1;</code>
     */
    public Builder setNumbers(int value) {
      
      numbers_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 numbers = 1;</code>
     */
    public Builder clearNumbers() {
      
      numbers_ = 0;
      onChanged();
      return this;
    }

    private int start_ ;
    /**
     * <code>int32 start = 2;</code>
     */
    public int getStart() {
      return start_;
    }
    /**
     * <code>int32 start = 2;</code>
     */
    public Builder setStart(int value) {
      
      start_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 start = 2;</code>
     */
    public Builder clearStart() {
      
      start_ = 0;
      onChanged();
      return this;
    }

    private int increment_ ;
    /**
     * <code>int32 increment = 3;</code>
     */
    public int getIncrement() {
      return increment_;
    }
    /**
     * <code>int32 increment = 3;</code>
     */
    public Builder setIncrement(int value) {
      
      increment_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 increment = 3;</code>
     */
    public Builder clearIncrement() {
      
      increment_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:heat.TemperatureRequest)
  }

  // @@protoc_insertion_point(class_scope:heat.TemperatureRequest)
  private static final heat.TemperatureRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new heat.TemperatureRequest();
  }

  public static heat.TemperatureRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TemperatureRequest>
      PARSER = new com.google.protobuf.AbstractParser<TemperatureRequest>() {
    @java.lang.Override
    public TemperatureRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TemperatureRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TemperatureRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TemperatureRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public heat.TemperatureRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

